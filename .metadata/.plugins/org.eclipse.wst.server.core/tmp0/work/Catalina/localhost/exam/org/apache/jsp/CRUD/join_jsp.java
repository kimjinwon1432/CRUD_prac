/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.87
 * Generated at: 2023-03-31 07:21:12 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.CRUD;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class join_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(7);
    _jspx_dependants.put("jar:file:/C:/eGovFrameDev-3.8.0-64bit/workspace/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/exam/WEB-INF/lib/standard-1.1.2.jar!/META-INF/c.tld", Long.valueOf(1098678690000L));
    _jspx_dependants.put("/WEB-INF/lib/egovframework.rte.ptl.mvc-3.8.0.jar", Long.valueOf(1679892811153L));
    _jspx_dependants.put("jar:file:/C:/eGovFrameDev-3.8.0-64bit/workspace/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/exam/WEB-INF/lib/egovframework.rte.ptl.mvc-3.8.0.jar!/META-INF/taglib.tld", Long.valueOf(1539665194000L));
    _jspx_dependants.put("jar:file:/C:/eGovFrameDev-3.8.0-64bit/workspace/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/exam/WEB-INF/lib/spring-webmvc-4.3.16.RELEASE.jar!/META-INF/spring.tld", Long.valueOf(1523252374000L));
    _jspx_dependants.put("jar:file:/C:/eGovFrameDev-3.8.0-64bit/workspace/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/exam/WEB-INF/lib/spring-webmvc-4.3.16.RELEASE.jar!/META-INF/spring-form.tld", Long.valueOf(1523252374000L));
    _jspx_dependants.put("/WEB-INF/lib/standard-1.1.2.jar", Long.valueOf(1679892821028L));
    _jspx_dependants.put("/WEB-INF/lib/spring-webmvc-4.3.16.RELEASE.jar", Long.valueOf(1679892817196L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("<meta charset=\"UTF-8\">\n");
      out.write("<title>CRUD - Member join</title>	\n");
      out.write("<link type=\"text/css\" rel=\"stylesheet\" href=\"");
      if (_jspx_meth_c_005furl_005f0(_jspx_page_context))
        return;
      out.write("\"/>\n");
      out.write("<script src=\"https://code.jquery.com/jquery-1.12.4.js\"></script>\n");
      out.write("<script src=\"https://code.jquery.com/ui/1.12.1/jquery-ui.js\"></script>\n");
      out.write("<style>\n");
      out.write("	html,body{\n");
      out.write("		margin: auto 0;\n");
      out.write("	}\n");
      out.write("	#wrap_cont{	\n");
      out.write("		height:60%;\n");
      out.write("	}\n");
      out.write("	#wrap_cont > form > table{\n");
      out.write("		margin: auto;\n");
      out.write("		padding: 10px;\n");
      out.write("	}\n");
      out.write("	.check{\n");
      out.write("	}\n");
      out.write("	.check > td{\n");
      out.write("		heigth: inherit;\n");
      out.write("	}\n");
      out.write("	.block{\n");
      out.write("		display: none;\n");
      out.write("	}\n");
      out.write("	tr{\n");
      out.write("		padding-top: 5px;		\n");
      out.write("	}\n");
      out.write("	th{\n");
      out.write("		padding-right:5px;\n");
      out.write("	}\n");
      out.write("	td{\n");
      out.write("		line-hieght: 3.0;\n");
      out.write("	}\n");
      out.write("	\n");
      out.write("\n");
      out.write("	.join_tr > td > input{\n");
      out.write("		padding-left: 40px;\n");
      out.write("		padding-right: 40px;	\n");
      out.write("	}\n");
      out.write("\n");
      out.write("	\n");
      out.write("</style>\n");
      out.write("\n");
      out.write("<script> \n");
      out.write("$(function(){\n");
      out.write("	//id 중복확인 버튼\n");
      out.write("	$(\"#btn_idCheck\").click(function(){\n");
      out.write("		var id = $.trim($(\"#id\").val());\n");
      out.write("		if(id==\"\"){\n");
      out.write("			alert(\"아이디를 입력해주세요\");\n");
      out.write("			$(\"#id\").focus();\n");
      out.write("			return false;\n");
      out.write("		}\n");
      out.write("		\n");
      out.write("		$.ajax({\n");
      out.write("			type:\"POST\",\n");
      out.write("			data:\"id=\"+id, //json \n");
      out.write("			url:\"checkId.do\",\n");
      out.write("			dataType: \"text\", //리턴타입\n");
      out.write("			success: function(result){\n");
      out.write("				if(result==\"available\"){\n");
      out.write("					alert(\"사용가능한 아이디입니다.\");\n");
      out.write("				}\n");
      out.write("				else {\n");
      out.write("					alert(\"이미 사용중인 아이디입니다.\");\n");
      out.write("					$(\"#id\").focus();\n");
      out.write("				}\n");
      out.write("			},\n");
      out.write("			error: function(){\n");
      out.write("				alert(\"오류발생\");\n");
      out.write("			}\n");
      out.write("		});\n");
      out.write("		\n");
      out.write("		\n");
      out.write("	});\n");
      out.write("	//회원가입 버튼\n");
      out.write("	$(\"#btn_submit\").click(function () {\n");
      out.write("		var id = $(\"#id\").val();\n");
      out.write("		var password =$(\"#password\").val();\n");
      out.write("		var name = $(\"#name\").val();\n");
      out.write("		var phone = $(\"#phone\").val();\n");
      out.write("		//var phoneTemp = phone.replace(/-/g, \"\");\n");
      out.write("		//$(\"#phone\").val(phoneTemp);\n");
      out.write("		\n");
      out.write("		id=$.trim(id);\n");
      out.write("		password=$.trim(password);\n");
      out.write("		name=$.trim(name);\n");
      out.write("		\n");
      out.write("		console.log(phone);\n");
      out.write("		\n");
      out.write("		if(id ==\"\"){\n");
      out.write("			alert(\"아이디를 입력해주세요\");\n");
      out.write("			return false;\n");
      out.write("		}		\n");
      out.write("		if(password ==\"\"){\n");
      out.write("			alert(\"비밀번호를 입력해주세요\");\n");
      out.write("			return false;\n");
      out.write("		}		\n");
      out.write("		if(name ==\"\"){\n");
      out.write("			alert(\"이름을 입력해주세요\");\n");
      out.write("			return false;\n");
      out.write("		}		\n");
      out.write("		\n");
      out.write("		//ajax\n");
      out.write("		var formData=$(\"#frm\").serialize();\n");
      out.write("		$.ajax({\n");
      out.write("			/*전송 전 세팅*/\n");
      out.write("			type: \"POST\",\n");
      out.write("			data: formData,\n");
      out.write("			url: \"joinSave.do\",\n");
      out.write("			dataType:\"text\",\n");
      out.write("			\n");
      out.write("			/*전송 후 세팅*/\n");
      out.write("			success: function(result){\n");
      out.write("				if(result ==\"ok\"){\n");
      out.write("					alert(\"가입완료\");\n");
      out.write("					location=\"mainPage.do\";\n");
      out.write("				} else{\n");
      out.write("					alert(\"가입 실패\");\n");
      out.write("				}\n");
      out.write("			},\n");
      out.write("			error: function(result){\n");
      out.write("				alert(\"오류발생\");\n");
      out.write("			}\n");
      out.write("		});\n");
      out.write("		\n");
      out.write("	});\n");
      out.write("	\n");
      out.write("	$(\"#password, #passwordCheck\").on('keyup', function(){\n");
      out.write("		var pw = $(\"#password\").val();\n");
      out.write("		var pwCheck=$(\"#passwordCheck\").val();\n");
      out.write("		if(pw!=\"\" || pwCheck!=\"\"){\n");
      out.write("			if(pw == pwCheck){\n");
      out.write("				$(\"#pw_check\").removeClass(\"block\");\n");
      out.write("				$(\"#pw_check\").html(\"비밀번호가 일치합니다.<br>\");\n");
      out.write("				console.log($(\"#pw_check\").innerText);\n");
      out.write("				$(\"#pw_check\").css(\"color\", \"blue\");\n");
      out.write("			}\n");
      out.write("			else{\n");
      out.write("				$(\"#pw_check\").removeClass(\"block\");\n");
      out.write("				$(\"#pw_check\").html(\"비밀번호가 일치하지 않습니다.<br>\");\n");
      out.write("				$(\"#pw_check\").css(\"color\", \"red\");\n");
      out.write("			}\n");
      out.write("		} //eof\n");
      out.write("	});\n");
      out.write("	\n");
      out.write("}); \n");
      out.write("/* \n");
      out.write("$(document).ready(function() {\n");
      out.write("\n");
      out.write("});\n");
      out.write(" */\n");
      out.write("</script>\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("\n");
      out.write("\n");
      out.write("<!-- 헤더 -->\n");
      out.write("	<div id=\"header\">\n");
      out.write("		<span>CRUD</span>\n");
      out.write("		<a class=\"btn_top\" href=\"agreement.do\">회원가입</a>\n");
      out.write("		<a class=\"btn_top\" href=\"login.do\">로그인</a>\n");
      out.write("	</div>\n");
      out.write("	\n");
      out.write("<!-- 본문 -->\n");
      out.write("	<div id= \"wrap_cont\">\n");
      out.write("	<form id =\"frm\">\n");
      out.write("		<table>\n");
      out.write("			<tr>\n");
      out.write("				<th><label for=\"id\">ID</label></th>\n");
      out.write("				<td>\n");
      out.write("				<input type=\"text\" name=\"id\" id=\"id\" placeholder=\"아이디\">\n");
      out.write("				<input type=\"button\" id=\"btn_idCheck\" value=\"ID중복확인\">\n");
      out.write("				</td>\n");
      out.write("			</tr>\n");
      out.write("			<tr>\n");
      out.write("				<th><label for=\"password\">비밀번호</label></th>\n");
      out.write("				<td><input type=\"password\" name=\"password\" id=\"password\"placeholder=\"비밀번호\"></td>\n");
      out.write("			</tr>\n");
      out.write("			<tr>\n");
      out.write("				<th><label for=\"passwordCheck\">비밀번호확인</label></th>\n");
      out.write("			<td>	<span id=\"pw_check\" class=\"block\"><br></span>\n");
      out.write("					\n");
      out.write("					<input type=\"password\" name=\"passwordCheck\" id=\"passwordCheck\" placeholder=\"비밀번호 확인\"></td>\n");
      out.write("			</tr>\n");
      out.write("			<tr>\n");
      out.write("				<th><label for=\"name\">이름</label></th>\n");
      out.write("				<td><input type=\"text\" name=\"name\" id=\"name\"placeholder=\"이름\"></td>\n");
      out.write("			</tr>\n");
      out.write("			<tr>\n");
      out.write("				<th><label for=\"email\">이메일</label></th>\n");
      out.write("				<td><input type=\"email\" name=\"email\"placeholder=\"\"></td>\n");
      out.write("			</tr>\n");
      out.write("			<tr>\n");
      out.write("				<th><label for=\"phone\">전화번호</label></th>\n");
      out.write("				<td><input type=\"text\" name=\"phone\"> (예: 010-1234-1234)\n");
      out.write("				</td>\n");
      out.write("			</tr>\n");
      out.write("			<tr>\n");
      out.write("				<th>주소</th>\n");
      out.write("				<td>\n");
      out.write("					<input type=\"text\" name=\"postNum\"placeholder=\"\">\n");
      out.write("					<input type=\"button\" name=\"check_addr\" value=\"주소찾기\">\n");
      out.write("					<br>\n");
      out.write("					<input type=\"text\" name=\"address\"></td>\n");
      out.write("			</tr>\n");
      out.write("			<tr class=\"join_tr\">\n");
      out.write("				<th></th>\n");
      out.write("				<td><input size=10 type=\"submit\" id=\"btn_submit\" value=\"회원가입\"></td>\n");
      out.write("			</tr>\n");
      out.write("		</table>\n");
      out.write("	</form>\n");
      out.write("	</div>\n");
      out.write("\n");
      out.write("<!-- 푸터 -->\n");
      out.write("<div id=\"footer\">\n");
      out.write("	<span>김진원</span>\n");
      out.write("	<span>CRUD_project</span>\n");
      out.write("</div>\n");
      out.write("\n");
      out.write("\n");
      out.write("</body>\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005furl_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:url
    org.apache.taglibs.standard.tag.rt.core.UrlTag _jspx_th_c_005furl_005f0 = (org.apache.taglibs.standard.tag.rt.core.UrlTag) _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.UrlTag.class);
    boolean _jspx_th_c_005furl_005f0_reused = false;
    try {
      _jspx_th_c_005furl_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005furl_005f0.setParent(null);
      // /CRUD/join.jsp(13,45) name = value type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005furl_005f0.setValue("/css/egovframework/crudform.css");
      int _jspx_eval_c_005furl_005f0 = _jspx_th_c_005furl_005f0.doStartTag();
      if (_jspx_th_c_005furl_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005furl_005f0);
      _jspx_th_c_005furl_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005furl_005f0, _jsp_getInstanceManager(), _jspx_th_c_005furl_005f0_reused);
    }
    return false;
  }
}
